version: 2

references:
  workspace: &workspace
    ~/sticky-sessions-android

  config_android: &config_android
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JAVA_TOOL_OPTIONS: "-Xms1024m -Xmx3200m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2"

  config_gcloud: &config_gcloud
    working_directory: *workspace
    docker:
      - image: google/cloud-sdk:latest
    environment:
      TERM: dumb

  cache_key: &cache_key
    key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: .
      paths:
        - ftl-tests
        - build
        - app/build
        - distribution
        - fastlane
        - changelog.txt
        - Gemfile

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace

jobs:
  build:
    <<: *config_android

    steps:
      - checkout

      - restore_cache:
          <<: *cache_key

      - run:
          name: Accept licenses
          command: yes | sdkmanager --licenses || true

      - run:
          name: Store Firebase Key
          command: echo $GOOGLE_SERVICES > ~/sticky-sessions-android/app/google-services.json

      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          <<: *cache_key
          paths:
            - ~/.gradle

      - run:
          name: Run Lint and Unit tests
          command: ./gradlew lintProdRelease testProdReleaseUnitTest

      - store_test_results:
          path: app/build/test-results

      - store_artifacts:
          path: app/build/reports
          destination: reports

      - run:
          name: Build
          command: ./gradlew clean assembleProd assembleStag assembleProdDebugAndroidTest  --stacktrace

      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks/

      - *persist_to_workspace

  test_instrumented:
    <<: *config_gcloud

    steps:
      - *attach_workspace

      - run:
          name: Setup Google Cloud auth
          command: ftl-tests/setup.sh

      - run:
          name: Run tests on Firebase Test Lab
          command: ftl-tests/run-tests.sh

  deploy_to_crashlytics:
    <<: *config_android

    steps:
      - *attach_workspace

      - run:
          name: Install fastlane
          command: bundle install

      - run:
          name: Set crashlytics stag apk path
          command: |
            echo 'export CRASHLYTICS_APK_PATH=$APK_PATH_STAG' >> $BASH_ENV
            echo 'export CRASHLYTICS_GROUPS=$TESTERS_STAG' >> $BASH_ENV

      - run:
          name: Deploy stag app to crashlytics
          command: bundle exec fastlane beta

      - run:
          name: Set crashlytics prod apk path
          command: |
            echo 'export CRASHLYTICS_APK_PATH=$APK_PATH_PROD' >> $BASH_ENV
            echo 'export CRASHLYTICS_GROUPS=$TESTERS_PROD' >> $BASH_ENV

      - run:
          name: Deploy prod app to crashlytics
          command: bundle exec fastlane beta

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test_instrumented:
          requires:
            - build
          filters:
            branches:
              only: dev
      - deploy_to_crashlytics:
          requires:
            - test_instrumented
          filters:
            branches:
              only:
                - dev
